name: main

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: us-central1-c
  DOCKER_IMAGE: cr.chuhlomin.com/gbfs-graphql
  DEPLOYMENT_NAME: gbfs-graphql

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15'

      - run: go test ./...
      - name: Build server binary
        env:
          CGO_ENABLED: "0"
          GOOS: linux
          GOARCH: amd64
          GOPROXY: https://athens.chuhlomin.com
        working-directory: ./cmd/server
        run: |
          go build -mod=readonly -a -installsuffix cgo \
            -ldflags="-w -s -X main.revision=${GITHUB_REF#refs/heads/}-${{ github.sha }}-$(date +%Y%m%d-%H:%M:%S)" \
            -o server main.go

      - name: Login to CR
        uses: docker/login-action@v1
        with:
          registry: cr.chuhlomin.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare Docker tags and labels
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-sha: true

      - name: Build and push to CR
        uses: docker/build-push-action@v2
        with:
          context: ./cmd/server
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Get the GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Render template
        id: render_template
        uses: chuhlomin/render-template@v1.2
        with:
          template: kube.yml
          vars: |
            app: ${{ env.DEPLOYMENT_NAME }}
            image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            domain: gbfs.chuhlomin.com
            cors_allow_origin: https://bike.chuhlomin.com

      - name: Deploy
        timeout-minutes: 4
        run: |-
          echo '${{ steps.render_template.outputs.result }}' | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
